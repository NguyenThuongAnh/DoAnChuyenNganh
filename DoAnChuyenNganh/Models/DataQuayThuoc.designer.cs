#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAnChuyenNganh.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyNhaThuoc")]
	public partial class DataQuayThuocDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertBillDetail(BillDetail instance);
    partial void UpdateBillDetail(BillDetail instance);
    partial void DeleteBillDetail(BillDetail instance);
    partial void InsertBrand(Brand instance);
    partial void UpdateBrand(Brand instance);
    partial void DeleteBrand(Brand instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertDistributor(Distributor instance);
    partial void UpdateDistributor(Distributor instance);
    partial void DeleteDistributor(Distributor instance);
    partial void InsertGuest(Guest instance);
    partial void UpdateGuest(Guest instance);
    partial void DeleteGuest(Guest instance);
    partial void InsertOrigin(Origin instance);
    partial void UpdateOrigin(Origin instance);
    partial void DeleteOrigin(Origin instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertSick(Sick instance);
    partial void UpdateSick(Sick instance);
    partial void DeleteSick(Sick instance);
    partial void InsertSmallCategory(SmallCategory instance);
    partial void UpdateSmallCategory(SmallCategory instance);
    partial void DeleteSmallCategory(SmallCategory instance);
    partial void InsertStockIn(StockIn instance);
    partial void UpdateStockIn(StockIn instance);
    partial void DeleteStockIn(StockIn instance);
    partial void InsertStockinDetail(StockinDetail instance);
    partial void UpdateStockinDetail(StockinDetail instance);
    partial void DeleteStockinDetail(StockinDetail instance);
    #endregion
		
		public DataQuayThuocDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QuayThuocConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataQuayThuocDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataQuayThuocDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataQuayThuocDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataQuayThuocDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<BillDetail> BillDetails
		{
			get
			{
				return this.GetTable<BillDetail>();
			}
		}
		
		public System.Data.Linq.Table<Brand> Brands
		{
			get
			{
				return this.GetTable<Brand>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Distributor> Distributors
		{
			get
			{
				return this.GetTable<Distributor>();
			}
		}
		
		public System.Data.Linq.Table<Guest> Guests
		{
			get
			{
				return this.GetTable<Guest>();
			}
		}
		
		public System.Data.Linq.Table<Origin> Origins
		{
			get
			{
				return this.GetTable<Origin>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Sick> Sicks
		{
			get
			{
				return this.GetTable<Sick>();
			}
		}
		
		public System.Data.Linq.Table<SmallCategory> SmallCategories
		{
			get
			{
				return this.GetTable<SmallCategory>();
			}
		}
		
		public System.Data.Linq.Table<StockIn> StockIns
		{
			get
			{
				return this.GetTable<StockIn>();
			}
		}
		
		public System.Data.Linq.Table<StockinDetail> StockinDetails
		{
			get
			{
				return this.GetTable<StockinDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bill_id;
		
		private System.Nullable<double> _bill_total;
		
		private System.Nullable<int> _guest_phone;
		
		private System.Nullable<System.DateTime> _bill_date;
		
		private string _guest_name;
		
		private EntitySet<BillDetail> _BillDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbill_idChanging(int value);
    partial void Onbill_idChanged();
    partial void Onbill_totalChanging(System.Nullable<double> value);
    partial void Onbill_totalChanged();
    partial void Onguest_phoneChanging(System.Nullable<int> value);
    partial void Onguest_phoneChanged();
    partial void Onbill_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onbill_dateChanged();
    partial void Onguest_nameChanging(string value);
    partial void Onguest_nameChanged();
    #endregion
		
		public Bill()
		{
			this._BillDetails = new EntitySet<BillDetail>(new Action<BillDetail>(this.attach_BillDetails), new Action<BillDetail>(this.detach_BillDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bill_id
		{
			get
			{
				return this._bill_id;
			}
			set
			{
				if ((this._bill_id != value))
				{
					this.Onbill_idChanging(value);
					this.SendPropertyChanging();
					this._bill_id = value;
					this.SendPropertyChanged("bill_id");
					this.Onbill_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_total", DbType="Float")]
		public System.Nullable<double> bill_total
		{
			get
			{
				return this._bill_total;
			}
			set
			{
				if ((this._bill_total != value))
				{
					this.Onbill_totalChanging(value);
					this.SendPropertyChanging();
					this._bill_total = value;
					this.SendPropertyChanged("bill_total");
					this.Onbill_totalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guest_phone", DbType="Int")]
		public System.Nullable<int> guest_phone
		{
			get
			{
				return this._guest_phone;
			}
			set
			{
				if ((this._guest_phone != value))
				{
					this.Onguest_phoneChanging(value);
					this.SendPropertyChanging();
					this._guest_phone = value;
					this.SendPropertyChanged("guest_phone");
					this.Onguest_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_date", DbType="Date")]
		public System.Nullable<System.DateTime> bill_date
		{
			get
			{
				return this._bill_date;
			}
			set
			{
				if ((this._bill_date != value))
				{
					this.Onbill_dateChanging(value);
					this.SendPropertyChanging();
					this._bill_date = value;
					this.SendPropertyChanged("bill_date");
					this.Onbill_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guest_name", DbType="NVarChar(50)")]
		public string guest_name
		{
			get
			{
				return this._guest_name;
			}
			set
			{
				if ((this._guest_name != value))
				{
					this.Onguest_nameChanging(value);
					this.SendPropertyChanging();
					this._guest_name = value;
					this.SendPropertyChanged("guest_name");
					this.Onguest_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_BillDetail", Storage="_BillDetails", ThisKey="bill_id", OtherKey="bill_id")]
		public EntitySet<BillDetail> BillDetails
		{
			get
			{
				return this._BillDetails;
			}
			set
			{
				this._BillDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDetails(BillDetail entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_BillDetails(BillDetail entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDetail")]
	public partial class BillDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _billdetail_id;
		
		private int _bill_id;
		
		private string _product_id;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<double> _price;
		
		private EntityRef<Bill> _Bill;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbilldetail_idChanging(int value);
    partial void Onbilldetail_idChanged();
    partial void Onbill_idChanging(int value);
    partial void Onbill_idChanged();
    partial void Onproduct_idChanging(string value);
    partial void Onproduct_idChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    #endregion
		
		public BillDetail()
		{
			this._Bill = default(EntityRef<Bill>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billdetail_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int billdetail_id
		{
			get
			{
				return this._billdetail_id;
			}
			set
			{
				if ((this._billdetail_id != value))
				{
					this.Onbilldetail_idChanging(value);
					this.SendPropertyChanging();
					this._billdetail_id = value;
					this.SendPropertyChanged("billdetail_id");
					this.Onbilldetail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_id", DbType="Int NOT NULL")]
		public int bill_id
		{
			get
			{
				return this._bill_id;
			}
			set
			{
				if ((this._bill_id != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbill_idChanging(value);
					this.SendPropertyChanging();
					this._bill_id = value;
					this.SendPropertyChanged("bill_id");
					this.Onbill_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_BillDetail", Storage="_Bill", ThisKey="bill_id", OtherKey="bill_id", IsForeignKey=true)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.BillDetails.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.BillDetails.Add(this);
						this._bill_id = value.bill_id;
					}
					else
					{
						this._bill_id = default(int);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_BillDetail", Storage="_Product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.BillDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.BillDetails.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Brand")]
	public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _brand_id;
		
		private string _brand_name;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbrand_idChanging(int value);
    partial void Onbrand_idChanged();
    partial void Onbrand_nameChanging(string value);
    partial void Onbrand_nameChanged();
    #endregion
		
		public Brand()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int brand_id
		{
			get
			{
				return this._brand_id;
			}
			set
			{
				if ((this._brand_id != value))
				{
					this.Onbrand_idChanging(value);
					this.SendPropertyChanging();
					this._brand_id = value;
					this.SendPropertyChanged("brand_id");
					this.Onbrand_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand_name", DbType="NVarChar(50)")]
		public string brand_name
		{
			get
			{
				return this._brand_name;
			}
			set
			{
				if ((this._brand_name != value))
				{
					this.Onbrand_nameChanging(value);
					this.SendPropertyChanging();
					this._brand_name = value;
					this.SendPropertyChanged("brand_name");
					this.Onbrand_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Product", Storage="_Products", ThisKey="brand_id", OtherKey="brand_id")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _category_id;
		
		private string _category_name;
		
		private EntitySet<SmallCategory> _SmallCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void Oncategory_nameChanging(string value);
    partial void Oncategory_nameChanged();
    #endregion
		
		public Category()
		{
			this._SmallCategories = new EntitySet<SmallCategory>(new Action<SmallCategory>(this.attach_SmallCategories), new Action<SmallCategory>(this.detach_SmallCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string category_name
		{
			get
			{
				return this._category_name;
			}
			set
			{
				if ((this._category_name != value))
				{
					this.Oncategory_nameChanging(value);
					this.SendPropertyChanging();
					this._category_name = value;
					this.SendPropertyChanged("category_name");
					this.Oncategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_SmallCategory", Storage="_SmallCategories", ThisKey="category_id", OtherKey="category_id")]
		public EntitySet<SmallCategory> SmallCategories
		{
			get
			{
				return this._SmallCategories;
			}
			set
			{
				this._SmallCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SmallCategories(SmallCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_SmallCategories(SmallCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Distributor")]
	public partial class Distributor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dis_id;
		
		private string _dis_name;
		
		private EntitySet<StockIn> _StockIns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondis_idChanging(int value);
    partial void Ondis_idChanged();
    partial void Ondis_nameChanging(string value);
    partial void Ondis_nameChanged();
    #endregion
		
		public Distributor()
		{
			this._StockIns = new EntitySet<StockIn>(new Action<StockIn>(this.attach_StockIns), new Action<StockIn>(this.detach_StockIns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dis_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dis_id
		{
			get
			{
				return this._dis_id;
			}
			set
			{
				if ((this._dis_id != value))
				{
					this.Ondis_idChanging(value);
					this.SendPropertyChanging();
					this._dis_id = value;
					this.SendPropertyChanged("dis_id");
					this.Ondis_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dis_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string dis_name
		{
			get
			{
				return this._dis_name;
			}
			set
			{
				if ((this._dis_name != value))
				{
					this.Ondis_nameChanging(value);
					this.SendPropertyChanging();
					this._dis_name = value;
					this.SendPropertyChanged("dis_name");
					this.Ondis_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Distributor_StockIn", Storage="_StockIns", ThisKey="dis_id", OtherKey="dis_id")]
		public EntitySet<StockIn> StockIns
		{
			get
			{
				return this._StockIns;
			}
			set
			{
				this._StockIns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StockIns(StockIn entity)
		{
			this.SendPropertyChanging();
			entity.Distributor = this;
		}
		
		private void detach_StockIns(StockIn entity)
		{
			this.SendPropertyChanging();
			entity.Distributor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Guest")]
	public partial class Guest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _guest_id;
		
		private string _phone;
		
		private string _guest_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onguest_idChanging(int value);
    partial void Onguest_idChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void Onguest_nameChanging(string value);
    partial void Onguest_nameChanged();
    #endregion
		
		public Guest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guest_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int guest_id
		{
			get
			{
				return this._guest_id;
			}
			set
			{
				if ((this._guest_id != value))
				{
					this.Onguest_idChanging(value);
					this.SendPropertyChanging();
					this._guest_id = value;
					this.SendPropertyChanged("guest_id");
					this.Onguest_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guest_name", DbType="NVarChar(50)")]
		public string guest_name
		{
			get
			{
				return this._guest_name;
			}
			set
			{
				if ((this._guest_name != value))
				{
					this.Onguest_nameChanging(value);
					this.SendPropertyChanging();
					this._guest_name = value;
					this.SendPropertyChanged("guest_name");
					this.Onguest_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Origin")]
	public partial class Origin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _origin_id;
		
		private string _origin_name;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorigin_idChanging(int value);
    partial void Onorigin_idChanged();
    partial void Onorigin_nameChanging(string value);
    partial void Onorigin_nameChanged();
    #endregion
		
		public Origin()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origin_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int origin_id
		{
			get
			{
				return this._origin_id;
			}
			set
			{
				if ((this._origin_id != value))
				{
					this.Onorigin_idChanging(value);
					this.SendPropertyChanging();
					this._origin_id = value;
					this.SendPropertyChanged("origin_id");
					this.Onorigin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origin_name", DbType="NVarChar(50)")]
		public string origin_name
		{
			get
			{
				return this._origin_name;
			}
			set
			{
				if ((this._origin_name != value))
				{
					this.Onorigin_nameChanging(value);
					this.SendPropertyChanging();
					this._origin_name = value;
					this.SendPropertyChanged("origin_name");
					this.Onorigin_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Origin_Product", Storage="_Products", ThisKey="origin_id", OtherKey="origin_id")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Origin = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Origin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _product_id;
		
		private string _product_name;
		
		private string _product_user;
		
		private string _product_uses;
		
		private string _product_treatment;
		
		private string _product_number;
		
		private string _product_warning;
		
		private int _brand_id;
		
		private int _origin_id;
		
		private int _smallcategory_id;
		
		private string _product_description;
		
		private string _product_image;
		
		private string _product_format;
		
		private string _product_packing;
		
		private string _prescription_drugs;
		
		private System.Nullable<double> _product_imprice;
		
		private System.Nullable<double> _product_saleprice;
		
		private System.Nullable<int> _product_status;
		
		private System.Nullable<int> _product_quantity;
		
		private EntitySet<BillDetail> _BillDetails;
		
		private EntitySet<StockinDetail> _StockinDetails;
		
		private EntityRef<Brand> _Brand;
		
		private EntityRef<Origin> _Origin;
		
		private EntityRef<SmallCategory> _SmallCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(string value);
    partial void Onproduct_idChanged();
    partial void Onproduct_nameChanging(string value);
    partial void Onproduct_nameChanged();
    partial void Onproduct_userChanging(string value);
    partial void Onproduct_userChanged();
    partial void Onproduct_usesChanging(string value);
    partial void Onproduct_usesChanged();
    partial void Onproduct_treatmentChanging(string value);
    partial void Onproduct_treatmentChanged();
    partial void Onproduct_numberChanging(string value);
    partial void Onproduct_numberChanged();
    partial void Onproduct_warningChanging(string value);
    partial void Onproduct_warningChanged();
    partial void Onbrand_idChanging(int value);
    partial void Onbrand_idChanged();
    partial void Onorigin_idChanging(int value);
    partial void Onorigin_idChanged();
    partial void Onsmallcategory_idChanging(int value);
    partial void Onsmallcategory_idChanged();
    partial void Onproduct_descriptionChanging(string value);
    partial void Onproduct_descriptionChanged();
    partial void Onproduct_imageChanging(string value);
    partial void Onproduct_imageChanged();
    partial void Onproduct_formatChanging(string value);
    partial void Onproduct_formatChanged();
    partial void Onproduct_packingChanging(string value);
    partial void Onproduct_packingChanged();
    partial void Onprescription_drugsChanging(string value);
    partial void Onprescription_drugsChanged();
    partial void Onproduct_impriceChanging(System.Nullable<double> value);
    partial void Onproduct_impriceChanged();
    partial void Onproduct_salepriceChanging(System.Nullable<double> value);
    partial void Onproduct_salepriceChanged();
    partial void Onproduct_statusChanging(System.Nullable<int> value);
    partial void Onproduct_statusChanged();
    partial void Onproduct_quantityChanging(System.Nullable<int> value);
    partial void Onproduct_quantityChanged();
    #endregion
		
		public Product()
		{
			this._BillDetails = new EntitySet<BillDetail>(new Action<BillDetail>(this.attach_BillDetails), new Action<BillDetail>(this.detach_BillDetails));
			this._StockinDetails = new EntitySet<StockinDetail>(new Action<StockinDetail>(this.attach_StockinDetails), new Action<StockinDetail>(this.detach_StockinDetails));
			this._Brand = default(EntityRef<Brand>);
			this._Origin = default(EntityRef<Origin>);
			this._SmallCategory = default(EntityRef<SmallCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string product_name
		{
			get
			{
				return this._product_name;
			}
			set
			{
				if ((this._product_name != value))
				{
					this.Onproduct_nameChanging(value);
					this.SendPropertyChanging();
					this._product_name = value;
					this.SendPropertyChanged("product_name");
					this.Onproduct_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_user", DbType="NVarChar(100)")]
		public string product_user
		{
			get
			{
				return this._product_user;
			}
			set
			{
				if ((this._product_user != value))
				{
					this.Onproduct_userChanging(value);
					this.SendPropertyChanging();
					this._product_user = value;
					this.SendPropertyChanged("product_user");
					this.Onproduct_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_uses", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string product_uses
		{
			get
			{
				return this._product_uses;
			}
			set
			{
				if ((this._product_uses != value))
				{
					this.Onproduct_usesChanging(value);
					this.SendPropertyChanging();
					this._product_uses = value;
					this.SendPropertyChanged("product_uses");
					this.Onproduct_usesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_treatment", DbType="NVarChar(150)")]
		public string product_treatment
		{
			get
			{
				return this._product_treatment;
			}
			set
			{
				if ((this._product_treatment != value))
				{
					this.Onproduct_treatmentChanging(value);
					this.SendPropertyChanging();
					this._product_treatment = value;
					this.SendPropertyChanged("product_treatment");
					this.Onproduct_treatmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_number", DbType="NVarChar(15)")]
		public string product_number
		{
			get
			{
				return this._product_number;
			}
			set
			{
				if ((this._product_number != value))
				{
					this.Onproduct_numberChanging(value);
					this.SendPropertyChanging();
					this._product_number = value;
					this.SendPropertyChanged("product_number");
					this.Onproduct_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_warning", DbType="NVarChar(100)")]
		public string product_warning
		{
			get
			{
				return this._product_warning;
			}
			set
			{
				if ((this._product_warning != value))
				{
					this.Onproduct_warningChanging(value);
					this.SendPropertyChanging();
					this._product_warning = value;
					this.SendPropertyChanged("product_warning");
					this.Onproduct_warningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand_id", DbType="Int NOT NULL")]
		public int brand_id
		{
			get
			{
				return this._brand_id;
			}
			set
			{
				if ((this._brand_id != value))
				{
					if (this._Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbrand_idChanging(value);
					this.SendPropertyChanging();
					this._brand_id = value;
					this.SendPropertyChanged("brand_id");
					this.Onbrand_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origin_id", DbType="Int NOT NULL")]
		public int origin_id
		{
			get
			{
				return this._origin_id;
			}
			set
			{
				if ((this._origin_id != value))
				{
					if (this._Origin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorigin_idChanging(value);
					this.SendPropertyChanging();
					this._origin_id = value;
					this.SendPropertyChanged("origin_id");
					this.Onorigin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smallcategory_id", DbType="Int NOT NULL")]
		public int smallcategory_id
		{
			get
			{
				return this._smallcategory_id;
			}
			set
			{
				if ((this._smallcategory_id != value))
				{
					if (this._SmallCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsmallcategory_idChanging(value);
					this.SendPropertyChanging();
					this._smallcategory_id = value;
					this.SendPropertyChanged("smallcategory_id");
					this.Onsmallcategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string product_description
		{
			get
			{
				return this._product_description;
			}
			set
			{
				if ((this._product_description != value))
				{
					this.Onproduct_descriptionChanging(value);
					this.SendPropertyChanging();
					this._product_description = value;
					this.SendPropertyChanged("product_description");
					this.Onproduct_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_image", DbType="VarChar(50)")]
		public string product_image
		{
			get
			{
				return this._product_image;
			}
			set
			{
				if ((this._product_image != value))
				{
					this.Onproduct_imageChanging(value);
					this.SendPropertyChanging();
					this._product_image = value;
					this.SendPropertyChanged("product_image");
					this.Onproduct_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_format", DbType="NVarChar(20)")]
		public string product_format
		{
			get
			{
				return this._product_format;
			}
			set
			{
				if ((this._product_format != value))
				{
					this.Onproduct_formatChanging(value);
					this.SendPropertyChanging();
					this._product_format = value;
					this.SendPropertyChanged("product_format");
					this.Onproduct_formatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_packing", DbType="NVarChar(25)")]
		public string product_packing
		{
			get
			{
				return this._product_packing;
			}
			set
			{
				if ((this._product_packing != value))
				{
					this.Onproduct_packingChanging(value);
					this.SendPropertyChanging();
					this._product_packing = value;
					this.SendPropertyChanged("product_packing");
					this.Onproduct_packingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prescription_drugs", DbType="VarChar(5)")]
		public string prescription_drugs
		{
			get
			{
				return this._prescription_drugs;
			}
			set
			{
				if ((this._prescription_drugs != value))
				{
					this.Onprescription_drugsChanging(value);
					this.SendPropertyChanging();
					this._prescription_drugs = value;
					this.SendPropertyChanged("prescription_drugs");
					this.Onprescription_drugsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_imprice", DbType="Float")]
		public System.Nullable<double> product_imprice
		{
			get
			{
				return this._product_imprice;
			}
			set
			{
				if ((this._product_imprice != value))
				{
					this.Onproduct_impriceChanging(value);
					this.SendPropertyChanging();
					this._product_imprice = value;
					this.SendPropertyChanged("product_imprice");
					this.Onproduct_impriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_saleprice", DbType="Float")]
		public System.Nullable<double> product_saleprice
		{
			get
			{
				return this._product_saleprice;
			}
			set
			{
				if ((this._product_saleprice != value))
				{
					this.Onproduct_salepriceChanging(value);
					this.SendPropertyChanging();
					this._product_saleprice = value;
					this.SendPropertyChanged("product_saleprice");
					this.Onproduct_salepriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_status", DbType="Int")]
		public System.Nullable<int> product_status
		{
			get
			{
				return this._product_status;
			}
			set
			{
				if ((this._product_status != value))
				{
					this.Onproduct_statusChanging(value);
					this.SendPropertyChanging();
					this._product_status = value;
					this.SendPropertyChanged("product_status");
					this.Onproduct_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_quantity", DbType="Int")]
		public System.Nullable<int> product_quantity
		{
			get
			{
				return this._product_quantity;
			}
			set
			{
				if ((this._product_quantity != value))
				{
					this.Onproduct_quantityChanging(value);
					this.SendPropertyChanging();
					this._product_quantity = value;
					this.SendPropertyChanged("product_quantity");
					this.Onproduct_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_BillDetail", Storage="_BillDetails", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<BillDetail> BillDetails
		{
			get
			{
				return this._BillDetails;
			}
			set
			{
				this._BillDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_StockinDetail", Storage="_StockinDetails", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<StockinDetail> StockinDetails
		{
			get
			{
				return this._StockinDetails;
			}
			set
			{
				this._StockinDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Product", Storage="_Brand", ThisKey="brand_id", OtherKey="brand_id", IsForeignKey=true)]
		public Brand Brand
		{
			get
			{
				return this._Brand.Entity;
			}
			set
			{
				Brand previousValue = this._Brand.Entity;
				if (((previousValue != value) 
							|| (this._Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Brand.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._brand_id = value.brand_id;
					}
					else
					{
						this._brand_id = default(int);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Origin_Product", Storage="_Origin", ThisKey="origin_id", OtherKey="origin_id", IsForeignKey=true)]
		public Origin Origin
		{
			get
			{
				return this._Origin.Entity;
			}
			set
			{
				Origin previousValue = this._Origin.Entity;
				if (((previousValue != value) 
							|| (this._Origin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Origin.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Origin.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._origin_id = value.origin_id;
					}
					else
					{
						this._origin_id = default(int);
					}
					this.SendPropertyChanged("Origin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmallCategory_Product", Storage="_SmallCategory", ThisKey="smallcategory_id", OtherKey="smallcategory_id", IsForeignKey=true)]
		public SmallCategory SmallCategory
		{
			get
			{
				return this._SmallCategory.Entity;
			}
			set
			{
				SmallCategory previousValue = this._SmallCategory.Entity;
				if (((previousValue != value) 
							|| (this._SmallCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SmallCategory.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._SmallCategory.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._smallcategory_id = value.smallcategory_id;
					}
					else
					{
						this._smallcategory_id = default(int);
					}
					this.SendPropertyChanged("SmallCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDetails(BillDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_BillDetails(BillDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_StockinDetails(StockinDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_StockinDetails(StockinDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sick")]
	public partial class Sick : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sick_id;
		
		private string _sick_name;
		
		private string _sick_type;
		
		private string _sick_reason;
		
		private string _sick_symptom;
		
		private string _sick_risk;
		
		private string _sick_treatment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsick_idChanging(int value);
    partial void Onsick_idChanged();
    partial void Onsick_nameChanging(string value);
    partial void Onsick_nameChanged();
    partial void Onsick_typeChanging(string value);
    partial void Onsick_typeChanged();
    partial void Onsick_reasonChanging(string value);
    partial void Onsick_reasonChanged();
    partial void Onsick_symptomChanging(string value);
    partial void Onsick_symptomChanged();
    partial void Onsick_riskChanging(string value);
    partial void Onsick_riskChanged();
    partial void Onsick_treatmentChanging(string value);
    partial void Onsick_treatmentChanged();
    #endregion
		
		public Sick()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sick_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sick_id
		{
			get
			{
				return this._sick_id;
			}
			set
			{
				if ((this._sick_id != value))
				{
					this.Onsick_idChanging(value);
					this.SendPropertyChanging();
					this._sick_id = value;
					this.SendPropertyChanged("sick_id");
					this.Onsick_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sick_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sick_name
		{
			get
			{
				return this._sick_name;
			}
			set
			{
				if ((this._sick_name != value))
				{
					this.Onsick_nameChanging(value);
					this.SendPropertyChanging();
					this._sick_name = value;
					this.SendPropertyChanged("sick_name");
					this.Onsick_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sick_type", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string sick_type
		{
			get
			{
				return this._sick_type;
			}
			set
			{
				if ((this._sick_type != value))
				{
					this.Onsick_typeChanging(value);
					this.SendPropertyChanging();
					this._sick_type = value;
					this.SendPropertyChanged("sick_type");
					this.Onsick_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sick_reason", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string sick_reason
		{
			get
			{
				return this._sick_reason;
			}
			set
			{
				if ((this._sick_reason != value))
				{
					this.Onsick_reasonChanging(value);
					this.SendPropertyChanging();
					this._sick_reason = value;
					this.SendPropertyChanged("sick_reason");
					this.Onsick_reasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sick_symptom", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string sick_symptom
		{
			get
			{
				return this._sick_symptom;
			}
			set
			{
				if ((this._sick_symptom != value))
				{
					this.Onsick_symptomChanging(value);
					this.SendPropertyChanging();
					this._sick_symptom = value;
					this.SendPropertyChanged("sick_symptom");
					this.Onsick_symptomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sick_risk", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string sick_risk
		{
			get
			{
				return this._sick_risk;
			}
			set
			{
				if ((this._sick_risk != value))
				{
					this.Onsick_riskChanging(value);
					this.SendPropertyChanging();
					this._sick_risk = value;
					this.SendPropertyChanged("sick_risk");
					this.Onsick_riskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sick_treatment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string sick_treatment
		{
			get
			{
				return this._sick_treatment;
			}
			set
			{
				if ((this._sick_treatment != value))
				{
					this.Onsick_treatmentChanging(value);
					this.SendPropertyChanging();
					this._sick_treatment = value;
					this.SendPropertyChanged("sick_treatment");
					this.Onsick_treatmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmallCategory")]
	public partial class SmallCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _category_id;
		
		private int _smallcategory_id;
		
		private string _smallcategory_name;
		
		private EntitySet<Product> _Products;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void Onsmallcategory_idChanging(int value);
    partial void Onsmallcategory_idChanged();
    partial void Onsmallcategory_nameChanging(string value);
    partial void Onsmallcategory_nameChanged();
    #endregion
		
		public SmallCategory()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int NOT NULL")]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smallcategory_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int smallcategory_id
		{
			get
			{
				return this._smallcategory_id;
			}
			set
			{
				if ((this._smallcategory_id != value))
				{
					this.Onsmallcategory_idChanging(value);
					this.SendPropertyChanging();
					this._smallcategory_id = value;
					this.SendPropertyChanged("smallcategory_id");
					this.Onsmallcategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smallcategory_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string smallcategory_name
		{
			get
			{
				return this._smallcategory_name;
			}
			set
			{
				if ((this._smallcategory_name != value))
				{
					this.Onsmallcategory_nameChanging(value);
					this.SendPropertyChanging();
					this._smallcategory_name = value;
					this.SendPropertyChanged("smallcategory_name");
					this.Onsmallcategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmallCategory_Product", Storage="_Products", ThisKey="smallcategory_id", OtherKey="smallcategory_id")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_SmallCategory", Storage="_Category", ThisKey="category_id", OtherKey="category_id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.SmallCategories.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.SmallCategories.Add(this);
						this._category_id = value.category_id;
					}
					else
					{
						this._category_id = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.SmallCategory = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.SmallCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockIn")]
	public partial class StockIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stockin_id;
		
		private int _dis_id;
		
		private System.DateTime _date;
		
		private double _total;
		
		private EntitySet<StockinDetail> _StockinDetails;
		
		private EntityRef<Distributor> _Distributor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstockin_idChanging(int value);
    partial void Onstockin_idChanged();
    partial void Ondis_idChanging(int value);
    partial void Ondis_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OntotalChanging(double value);
    partial void OntotalChanged();
    #endregion
		
		public StockIn()
		{
			this._StockinDetails = new EntitySet<StockinDetail>(new Action<StockinDetail>(this.attach_StockinDetails), new Action<StockinDetail>(this.detach_StockinDetails));
			this._Distributor = default(EntityRef<Distributor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stockin_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int stockin_id
		{
			get
			{
				return this._stockin_id;
			}
			set
			{
				if ((this._stockin_id != value))
				{
					this.Onstockin_idChanging(value);
					this.SendPropertyChanging();
					this._stockin_id = value;
					this.SendPropertyChanged("stockin_id");
					this.Onstockin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dis_id", DbType="Int NOT NULL")]
		public int dis_id
		{
			get
			{
				return this._dis_id;
			}
			set
			{
				if ((this._dis_id != value))
				{
					if (this._Distributor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondis_idChanging(value);
					this.SendPropertyChanging();
					this._dis_id = value;
					this.SendPropertyChanged("dis_id");
					this.Ondis_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Float NOT NULL")]
		public double total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StockIn_StockinDetail", Storage="_StockinDetails", ThisKey="stockin_id", OtherKey="stockin_id")]
		public EntitySet<StockinDetail> StockinDetails
		{
			get
			{
				return this._StockinDetails;
			}
			set
			{
				this._StockinDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Distributor_StockIn", Storage="_Distributor", ThisKey="dis_id", OtherKey="dis_id", IsForeignKey=true)]
		public Distributor Distributor
		{
			get
			{
				return this._Distributor.Entity;
			}
			set
			{
				Distributor previousValue = this._Distributor.Entity;
				if (((previousValue != value) 
							|| (this._Distributor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Distributor.Entity = null;
						previousValue.StockIns.Remove(this);
					}
					this._Distributor.Entity = value;
					if ((value != null))
					{
						value.StockIns.Add(this);
						this._dis_id = value.dis_id;
					}
					else
					{
						this._dis_id = default(int);
					}
					this.SendPropertyChanged("Distributor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StockinDetails(StockinDetail entity)
		{
			this.SendPropertyChanging();
			entity.StockIn = this;
		}
		
		private void detach_StockinDetails(StockinDetail entity)
		{
			this.SendPropertyChanging();
			entity.StockIn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockinDetail")]
	public partial class StockinDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stockindetail_id;
		
		private int _stockin_id;
		
		private string _product_id;
		
		private int _stockin_quantity;
		
		private double _impirce;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<StockIn> _StockIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstockindetail_idChanging(int value);
    partial void Onstockindetail_idChanged();
    partial void Onstockin_idChanging(int value);
    partial void Onstockin_idChanged();
    partial void Onproduct_idChanging(string value);
    partial void Onproduct_idChanged();
    partial void Onstockin_quantityChanging(int value);
    partial void Onstockin_quantityChanged();
    partial void OnimpirceChanging(double value);
    partial void OnimpirceChanged();
    #endregion
		
		public StockinDetail()
		{
			this._Product = default(EntityRef<Product>);
			this._StockIn = default(EntityRef<StockIn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stockindetail_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int stockindetail_id
		{
			get
			{
				return this._stockindetail_id;
			}
			set
			{
				if ((this._stockindetail_id != value))
				{
					this.Onstockindetail_idChanging(value);
					this.SendPropertyChanging();
					this._stockindetail_id = value;
					this.SendPropertyChanged("stockindetail_id");
					this.Onstockindetail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stockin_id", DbType="Int NOT NULL")]
		public int stockin_id
		{
			get
			{
				return this._stockin_id;
			}
			set
			{
				if ((this._stockin_id != value))
				{
					if (this._StockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstockin_idChanging(value);
					this.SendPropertyChanging();
					this._stockin_id = value;
					this.SendPropertyChanged("stockin_id");
					this.Onstockin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stockin_quantity", DbType="Int NOT NULL")]
		public int stockin_quantity
		{
			get
			{
				return this._stockin_quantity;
			}
			set
			{
				if ((this._stockin_quantity != value))
				{
					this.Onstockin_quantityChanging(value);
					this.SendPropertyChanging();
					this._stockin_quantity = value;
					this.SendPropertyChanged("stockin_quantity");
					this.Onstockin_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_impirce", DbType="Float NOT NULL")]
		public double impirce
		{
			get
			{
				return this._impirce;
			}
			set
			{
				if ((this._impirce != value))
				{
					this.OnimpirceChanging(value);
					this.SendPropertyChanging();
					this._impirce = value;
					this.SendPropertyChanged("impirce");
					this.OnimpirceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_StockinDetail", Storage="_Product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.StockinDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.StockinDetails.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StockIn_StockinDetail", Storage="_StockIn", ThisKey="stockin_id", OtherKey="stockin_id", IsForeignKey=true)]
		public StockIn StockIn
		{
			get
			{
				return this._StockIn.Entity;
			}
			set
			{
				StockIn previousValue = this._StockIn.Entity;
				if (((previousValue != value) 
							|| (this._StockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StockIn.Entity = null;
						previousValue.StockinDetails.Remove(this);
					}
					this._StockIn.Entity = value;
					if ((value != null))
					{
						value.StockinDetails.Add(this);
						this._stockin_id = value.stockin_id;
					}
					else
					{
						this._stockin_id = default(int);
					}
					this.SendPropertyChanged("StockIn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
